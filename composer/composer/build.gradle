apply plugin: "org.jetbrains.kotlin.jvm"
apply plugin: 'application'
apply from: "$rootProject.projectDir/publish.gradle"

ext.artifactId = "composer"
description ='Reactive Android Instrumentation Test Runner.'
mainClassName = 'com.gojuno.composer.MainKt'

dependencies {
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    api project(":commander:android")
    api "com.beust:jcommander:1.71"
    api "commons-io:commons-io:2.6"
    api "org.apache.commons:commons-text:1.6"
    api "com.google.code.gson:gson:2.8.5"
    api "com.linkedin.dextestparser:parser:1.1.0"

    testImplementation "org.assertj:assertj-core:3.11.1"
    testImplementation "org.spekframework.spek2:spek-dsl-jvm:2.0.5"
    testRuntimeOnly "org.spekframework.spek2:spek-runner-junit5:2.0.5"
    testRuntimeOnly "org.jetbrains.kotlin:kotlin-reflect"
}

jar {
    manifest {
        attributes('Main-Class': mainClassName)
    }
}

test {
    useJUnitPlatform {
        includeEngines 'spek2'
    }
}

tasks.register("npmInstall", Exec) {
    workingDir = "../html-report"
    commandLine = ["npm", "install"]
    inputs.file("../html-report/package.json")
    outputs.dir("../html-report/node_modules")
}

tasks.register("npmRunBuild", Exec) {
    workingDir = "../html-report"
    commandLine = ["npm", "run", "build"]
    inputs.dir("../html-report/layout")
    inputs.dir("../html-report/src")
    inputs.dir("../html-report/styles")
    inputs.file("../html-report/.babelrc")
    inputs.file("../html-report/postcss.config.js")
    inputs.file("../html-report/webpack.config.dev.js")
    inputs.file("../html-report/webpack.config.js")
    inputs.file("../html-report/webpack.config.prod.js")
    outputs.dir("../html-report/build")

    dependsOn("npmInstall")
}

tasks.named("processResources") {
    dependsOn("npmRunBuild")
}
